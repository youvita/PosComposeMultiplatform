
CREATE TABLE Menu (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    imageUrl BLOB
);

insertMenu:
INSERT INTO Menu(name, imageUrl) VALUES(?, ?);

updateMenu:
UPDATE Menu SET name = ?, imageUrl = ? WHERE id = ?;

deleteMenu:
DELETE FROM Menu WHERE id = ?;

getAllMenu:
SELECT * FROM Menu;

CREATE TABLE History (
    order_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER DEFAULT 1,
    table_id INTEGER DEFAULT 3,
    order_no INTEGER DEFAULT 909,
    queue_no INTEGER DEFAULT 23,
    date TEXT DEFAULT "Jan, 23, 2024",
    total_item INTEGER DEFAULT 93,
    total_qty INTEGER DEFAULT 9,
    sub_total REAL DEFAULT 3.3,
    discount INTEGER DEFAULT 10,
    vat INTEGER DEFAULT 20,
    total REAL DEFAULT 90.90,
    status TEXT DEFAULT "Paid"
);

insertHistory:
INSERT INTO History(
customer_id,
table_id,
order_no,
queue_no,
date,
total_item,
total_qty,
sub_total,
discount,
vat,
total,
status
) VALUES(2,3,34,3,"Jan, 23, 2024",23,23,43.4,45,34,34.45,"Paid");

getAllHistory:
SELECT * FROM History;

getHistoryPaging:
SELECT * FROM History LIMIT ? OFFSET ?;

CREATE TABLE StockEntity (
    stock_id INTEGER NOT NULL PRIMARY KEY,
    product_id INTEGER UNIQUE,
    stock_in INTEGER,
    stock_out INTEGER,
    stock_box INTEGER,
    total INTEGER,
    date_in TEXT,
    date_out TEXT
);

insertStock:
INSERT OR REPLACE INTO StockEntity(stock_id, product_id, stock_in, stock_out, stock_box, total, date_in, date_out) VALUES(?,?, ?, ?, ?, ?, ?, ?);

getStockByProductId:
SELECT * FROM StockEntity WHERE product_id = ?;

getProductStock:
SELECT * FROM StockEntity JOIN ProductEntity ON StockEntity.product_id = ProductEntity.product_id;

CREATE TABLE ProductEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    menu_id INTEGER,
    product_id INTEGER,
    name TEXT,
    image BLOB,
    imageUrl TEXT,
    qty INTEGER,
    price INTEGER,
    discount INTEGER,
    category_name TEXT,
    cateogry_image BLOB
);

insertProduct:
INSERT INTO ProductEntity(menu_id,product_id, name, image, qty, price, discount, category_name, cateogry_image) VALUES(?,?, ?, ?,?, ?, ?,?,?);

getAllProduct:
SELECT * FROM ProductEntity WHERE menu_id = ?;


