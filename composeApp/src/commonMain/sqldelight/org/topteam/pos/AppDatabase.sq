
CREATE TABLE MenuEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    menuName TEXT,
    menuImage BLOB
);

insertMenu:
INSERT INTO MenuEntity(menuName, menuImage) VALUES(?, ?);

updateMenu:
UPDATE MenuEntity SET menuName = ?, menuImage = ? WHERE id = ?;

deleteMenu:
DELETE FROM MenuEntity WHERE id = ?;

getAllMenu:
SELECT * FROM MenuEntity;


CREATE TABLE StockEntity (
    stock_id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    product_id INTEGER,
    stock_in INTEGER,
    stock_out INTEGER,
    stock_box INTEGER,
    total INTEGER,
    price INTEGER,
    status TEXT,
    date TEXT,
    time TEXT
);

insertStock:
INSERT INTO StockEntity(product_id, stock_in, stock_out, stock_box, total, price, status, date, time) VALUES( ?,?,?, ?, ?, ?, ?,?,?);

updateStock:
UPDATE StockEntity SET product_id = ?, stock_in = ?, stock_out = ?, stock_box = ?, total = ?, price = ?, status = ?, date = ?, time = ? WHERE stock_id = ?;

getStockByProductId:
SELECT * FROM StockEntity WHERE product_id = ?;

getProductStock:
-- SELECT * FROM StockEntity JOIN ProductEntity JOIN MenuEntity ON StockEntity.product_id = ProductEntity.product_id AND ProductEntity.menu_id = MenuEntity.id GROUP BY StockEntity.product_id ORDER BY stock_id ASC;
SELECT * FROM StockEntity JOIN ProductEntity JOIN MenuEntity ON StockEntity.product_id = ProductEntity.product_id AND ProductEntity.menu_id = MenuEntity.id ORDER BY stock_id ASC;

CREATE TABLE ProductEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    menu_id INTEGER,
    product_id INTEGER,
    name TEXT,
    image BLOB,
    imageUrl TEXT,
    uom TEXT,
    qty TEXT,
    price TEXT,
    discount TEXT
);

updateProductQty:
UPDATE ProductEntity SET qty = ? WHERE id = ?;

updateProduct:
UPDATE ProductEntity SET menu_id = ?, product_id = ?, name = ?, image = ?, imageUrl = ?, uom = ?, qty = ?, price = ?, discount = ? WHERE product_id = ?;

insertProduct:
INSERT INTO ProductEntity(menu_id,product_id, name, image, imageUrl, uom, qty, price, discount) VALUES(?,?,?,?, ?, ?,?, ?, ?);

getProductByMenuId:
SELECT * FROM ProductEntity JOIN MenuEntity JOIN StockEntity ON ProductEntity.menu_id = MenuEntity.id AND StockEntity.product_id = ProductEntity.product_id WHERE menu_id = ?;

getAllProduct:
-- SELECT * FROM ProductEntity JOIN MenuEntity JOIN StockEntity ON ProductEntity.menu_id = MenuEntity.id AND StockEntity.product_id = ProductEntity.product_id;
SELECT * FROM ProductEntity JOIN MenuEntity JOIN StockEntity ON ProductEntity.menu_id = MenuEntity.id AND StockEntity.product_id = ProductEntity.product_id GROUP BY StockEntity.product_id ORDER BY stock_id ASC;
-- SELECT * FROM ProductEntity JOIN MenuEntity;

getProductByDate:
-- SELECT * FROM ProductEntity JOIN MenuEntity JOIN StockEntity ON ProductEntity.menu_id = MenuEntity.id AND ProductEntity.product_id = StockEntity.product_id WHERE date_in AND date_out >= ? AND date_in AND date_out <= ?;
SELECT * FROM ProductEntity JOIN MenuEntity JOIN StockEntity ON ProductEntity.menu_id = MenuEntity.id AND ProductEntity.product_id = StockEntity.product_id;

CREATE TABLE OrderEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    order_no TEXT,
    queue_no TEXT,
    date TEXT ,
    total_item TEXT,
    total_qty TEXT,
    sub_total TEXT,
    discount TEXT,
    vat TEXT,
    total TEXT,
    status TEXT
);

insertOrderHistory:
INSERT INTO OrderEntity(
order_no,
queue_no,
date,
total_item,
total_qty,
sub_total,
discount,
vat,
total,
status
) VALUES (?,?,?,?,?,?,?,?,?,?);

getAllOrderHistory:
SELECT * FROM OrderEntity;

getOrderHistoryPaging:
SELECT * FROM OrderEntity LIMIT ? OFFSET ?;

getProdutByOrderId:
SELECT * FROM ProductOrderEntity WHERE order_id = ?;

CREATE TABLE ProductOrderEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    product_id INTEGER, -- product code
    order_id INTEGER,
    name TEXT,
    image BLOB,
    imageUrl TEXT,
    qty INTEGER,
    price INTEGER,
    discount INTEGER
);

insertProductOrder:
INSERT INTO ProductOrderEntity(product_id,order_id, name, image,qty, price, discount)
VALUES(?,?, ?, ?,?, ?, ?);


CREATE TABLE PreferenceEntity (
    prefer_id INTEGER NOT NULL PRIMARY KEY,
    prefer_item TEXT
);

insertPreference:
INSERT OR REPLACE INTO PreferenceEntity(prefer_id, prefer_item) VALUES(?,?);

updatePreference:
UPDATE PreferenceEntity SET prefer_item = ? WHERE prefer_id = ?;

getPreference:
SELECT * FROM PreferenceEntity;

CREATE TABLE ParkingEntity (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    parking_no TEXT,
    check_in TEXT,
    check_out TEXT,
    duration INTEGER,
    time_unit TEXT,
    total TEXT
);

insertParking:
INSERT INTO ParkingEntity(parking_no, check_in, check_out, duration, time_unit, total) VALUES(?,?, ?,?,?,?);

updateParking:
UPDATE ParkingEntity SET check_out = ?, duration = ?, time_unit = ?, total = ? WHERE parking_no = ?;

getParking:
SELECT * FROM ParkingEntity;

getParkingById:
SELECT * FROM ParkingEntity WHERE parking_no = ?;